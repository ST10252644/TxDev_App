name: Android CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.gitignore'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.gitignore'
  workflow_dispatch: # Allow manual triggering

# Set permissions for the workflow
permissions:
  contents: read
  actions: read
  checks: write

env:
  # Use specific versions to ensure reproducibility
  GRADLE_VERSION: '8.10.2'
  ANDROID_COMPILE_SDK: '35'
  ANDROID_BUILD_TOOLS: '35.0.1'
  ANDROID_SDK_TOOLS: '11076708'
  DEBUG_KEYSTORE_B64: | 
      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


jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 45 # Prevent hanging builds
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full git history for proper versioning

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: ${{ env.ANDROID_BUILD_TOOLS }}
          cmake: '3.22.1'
          ndk: '25.2.9519653'

      - name: Accept Android SDK Licenses
        run: |
          echo "Accepting Android SDK licenses..."
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-34"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;${{ env.ANDROID_BUILD_TOOLS }}"

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      - name: Check Project Structure
        run: |
          echo "=== Project Structure ==="
          ls -la
          echo "=== Gradle Files ==="
          find . -name "*.gradle*" -type f
          echo "=== Android Manifest ==="
          find . -name "AndroidManifest.xml" -type f

      - name: Gradle Dependencies Check
        run: ./gradlew :app:dependencies --configuration debugRuntimeClasspath

      - name: Clean Project
        run: ./gradlew clean

      - name: Setup debug keystore
        run: echo "$DEBUG_KEYSTORE_B64" | base64 --decode > $HOME/.android/debug.keystore

      - name: Build Debug APK
        run: |
          echo "Building debug APK..."
          ./gradlew assembleDebug --stacktrace --info
        env:
          GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4g -XX:+HeapDumpOnOutOfMemoryError"

      - name: Run Unit Tests
        run: |
          echo "Running unit tests..."
          ./gradlew testDebugUnitTest --stacktrace
        continue-on-error: false

      - name: Run Android Lint
        run: |
          echo "Running Android Lint..."
          ./gradlew lintDebug --stacktrace
        continue-on-error: true

      - name: Build Release APK
        run: |
          echo "Building release APK..."
          ./gradlew assembleRelease --stacktrace
        env:
          GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4g -XX:+HeapDumpOnOutOfMemoryError"

      - name: List Output Files
        run: |
          echo "=== Debug APK Files ==="
          find . -name "*.apk" -path "*/debug/*" -type f
          echo "=== Release APK Files ==="
          find . -name "*.apk" -path "*/release/*" -type f
          echo "=== All Build Outputs ==="
          find . -path "*/build/outputs/*" -type f

      - name: Upload Debug APK
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk-${{ github.run_number }}
          path: |
            **/build/outputs/apk/debug/*.apk
          retention-days: 7

      - name: Upload Release APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-${{ github.run_number }}
          path: |
            **/build/outputs/apk/release/*.apk
          retention-days: 30

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: |
            **/build/test-results/**/*.xml
            **/build/reports/**/*
          retention-days: 7

      - name: Upload Lint Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports-${{ github.run_number }}
          path: |
            **/build/reports/lint-results-*.html
            **/build/reports/lint-results-*.xml
          retention-days: 7

  # Optional: Separate job for running instrumented tests if needed
  instrumented-tests:
    name: Instrumented Tests
    runs-on: ubuntu-latest
    if: false # Set to true if you have instrumented tests
    timeout-minutes: 30
    
    strategy:
      matrix:
        api-level: [28, 29, 30]
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      - name: Run Instrumented Tests
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew connectedAndroidTest --stacktrace

  # Optional: Security scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Security Scan
        uses: securecodewarrior/github-action-add-sarif@v1
        with:
          sarif-file: 'security-scan-results.sarif'
        continue-on-error: true

  # Optional: Deployment job for releases
  deploy:
    name: Deploy to Play Store
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && false # Set to true when ready
    needs: [build, instrumented-tests]
    environment: production
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Release APK
        uses: actions/download-artifact@v4
        with:
          name: release-apk-${{ github.run_number }}

      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.yourcompany.yourapp
          releaseFiles: '**/*.apk'
          track: internal # or 'alpha', 'beta', 'production'
